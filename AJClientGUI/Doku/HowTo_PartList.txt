[10:08:52] (Maj0r|ajGUIen) jo, hast du grad zeit, dass du mir die nochmal kurz in voller epischer breite erklären kannst?
[10:09:16] (muhviehstarr) warte ihc nehm mir dazu die doku her ;)
[10:11:01] (muhviehstarr) k
[10:11:26] (muhviehstarr) du kriegst am anfang erstmal fileinformation
[10:11:31] (muhviehstarr) mit der größe der datei in bytes
[10:11:37] (Maj0r|ajGUIen) ja
[10:12:18] (muhviehstarr) so
[10:12:21] (muhviehstarr) nach fileinformation
[10:12:32] (muhviehstarr) kriegste paar parts
[10:12:42] (Maj0r|ajGUIen) paar tausend
[10:12:47] (muhviehstarr) jop
[10:12:49] (muhviehstarr) je nach file
[10:12:52] (muhviehstarr) da steht dann drin
[10:12:53] (Maj0r|ajGUIen) jop
[10:13:14] (muhviehstarr) <part fromposition=0 type=-1/>
[10:13:15] (muhviehstarr) so
[10:13:25] (muhviehstarr) <part fromposition=1000 type=0/>
[10:13:31] (muhviehstarr) <part fromposition=2000 type=-1/>
[10:13:40] (muhviehstarr) das wäre jetzt eine gültige übergabe
[10:13:41] (muhviehstarr) das heißt
[10:13:49] (muhviehstarr) vom byte 0 bis byte 1000 hat man das file (-1)
[10:14:02] (Maj0r|ajGUIen) ok
[10:14:06] (muhviehstarr) dann von 1000 bis 2000 hat man nix, und ist auch nix zu sehen (0)
[10:14:20] (muhviehstarr) von 2000 bis größe aus fileinformation hat man wieder das file (-1)
[10:15:47] (Maj0r|ajGUIen) und die parts sind nicht immer gleich groß, sondern die größe richtet sich nach der anzahl der parts hintereinander mit der gleichen verfügbarkeit?
[10:15:58] (muhviehstarr) nein
[10:16:13] (muhviehstarr) die partgröße gilt von fromposition bis fromposition vom nächsten
[10:16:25] (muhviehstarr) egal wie verfügbar die sind, noch ob man das hat oder nicht
[10:16:38] (muhviehstarr) wenn es kein nachfolger gibt, ist das ende natürlich filegröße
[10:16:43] (muhviehstarr) steht auch so unter der tabelle
[10:17:18] (Maj0r|ajGUIen) klar. aber theoretisch kann jeder part eine andere größe haben, oder?
[10:17:32] (Maj0r|ajGUIen) oder nur der letzte?
[10:17:40] (muhviehstarr) ja jeder
[10:17:46] (muhviehstarr) und nicht nur theoretisch
[10:17:50] (muhviehstarr) das wird eher öfters passieren
[10:18:09] (Maj0r|ajGUIen) ok
[10:18:32] (Maj0r|ajGUIen) kann man sich darauf verlassen, dass in der xml die parts in der richtigen reihenfolge stehen?
[10:18:41] (muhviehstarr) ja
[10:19:46] (Maj0r|ajGUIen) wie hast du deine tabelle gemacht? eine spezielle anzahl von kästchen durch die größe der datei geteilt und diese dann entsprechend ausgewertet?
[10:20:16] (muhviehstarr) ich rechne mir aus
[10:20:26] (muhviehstarr) bei ner reihenhöhe von 16 pixel
[10:20:33] (muhviehstarr) und mein bereich ist 400 pixel breit
[10:20:39] (muhviehstarr) und vielleicht 160 pixel hoch
[10:20:53] (muhviehstarr) krieg ich also 10 reihen à 400 pixel rein
[10:20:59] (muhviehstarr) sprich ich hab 4000 pixel
[10:21:09] (muhviehstarr) dann ist die datei 400000 byte groß
[10:21:21] (muhviehstarr) sprich 1 pixel repräsentiert 100 bytes
[10:21:38] (muhviehstarr) wenn ich jetzt male das ich von 0 bis 2000 die file habe
[10:21:51] (muhviehstarr) male ich von pixel 0 bis 20 in reihe ein den bereich schwarz
[10:22:08] (Maj0r|ajGUIen) ok, jetzt hab ichs gerafft :-)
[10:22:22] (Maj0r|ajGUIen) danke für das epische meisterwerk;)
[10:22:27] (muhviehstarr) lol
[10:22:34] (muhviehstarr) reiner eigennütz
[10:22:45] (Maj0r|ajGUIen) ich glaub, ich werde diese erläuterung mal als doku mit einchecken.
[10:23:06] (muhviehstarr) lol